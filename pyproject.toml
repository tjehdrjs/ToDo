#---------------------------------------------------------------
# 파일명: pyproject.toml
# 이 파일은 Poetry에서 사용하는 설정 파일이다.
# - 프로젝트 이름, 번전, 설명
# - 포함할 파이썬 폴더
# - 필요한 외부 패키지 목록
# - 프로젝트 빌드 설정
# 등을 정의한다.
#----------------------------------------------------------------
[tool.poetry]

name = "todo"                              # 프로젝트 이름 (폴더명과는 무관함)
version = "0.1.0"                          # 프로젝트의 버전 (업데이트할 떄 변경)
description = ""                           # 프로젝트에 대한 간단한 설명
authors = ["서동건 <rlaalwjd5685@naver.com>"] # * 작성자의 이름과 이메일 (이름, 이메일)
readme = "README.md"                       # 이 프로젝트 소개 문서 파일 이름 (보통 깃허브 첫 화면에 보여질 내용)

# * 파이썬 코드가 들어 있는 폴더를 지정
# - 실제 FastAPI API 코드는 'api' 폴더에 작성되므로 그 폴더를 포함시킴
packages = [
    { include = "api" }     # * 'api' 폴더 안의 파일들을 패키지로 포함시킴
    ]

# ---------------------------------------------------------------
# 이 프로젝트를 실행하기 위해 꼭 필요한 외부 패키지들 (의존성 목록)
# --------------------------------------------------------------
[tool.poetry.dependencies] 

Python = "^3.12"                                         # * 사용 가능한 파이썬 버전 (3.12 이상이면 모두 허용)

# * FastAPI: 웹 API 서버를 빠르게 만들 수있게 해주는 프레임워크
fastapi = "^0.115.12"

# * Uvicorn: FastAPI 앱을 실행하는 웹 서버 프로그램
# - "standard" 옵션을 통해 자동 재시작, 오깅, 보안 등 추가 기능도 포함됨
uvicorn = { extras = ["standard"], version = "^0.34.0" }

# * SQLAlchemy: ORM 도구
# - SQL을 직접 쓰지 않고 파이썬 코드로 테이블을 만들고 데이터를 조작할 수 있음
sqlalchemy = "^2.0.40"

# * asyncpg: PostgreSQL 데이터베이스에 비동기 방식으로 연결할 수 있게 해주는 드라이버
# - FastApI의 비동기 처리 성능을 활용하기 위해 필요
asyncpg = "^0.30.0"

# * psycopg2-binary: poetrySQL에 동기 방식으로 연결할 수 있는 드라이버
# - 'migrate_db.py' 같은 초기화 스크립트에서 사용됨
# - asyncpg가 아닌 일반 DB 연결(create_engine) 시 사용
psycopg2-binary = "^2.9.10"

# ---------------------------------------------------------------
# 프로젝트를 빌드(포장하거나 배포)할 때 사용하는 설정
# - Poetry 내부적으로 사용하는 빌드 도구 지정
# ---------------------------------------------------------------
[build-system]

# * 빌드를 실행할 떄 필요한 도구 이름
requires = ["poetry-core"]

# * 빌드를 실제로 처리해주는 프로그램 이름 (Poetry 내부에서 사용용)
build-backend = "poetry.core.masonry.api" 
