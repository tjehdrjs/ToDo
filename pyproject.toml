#---------------------------------------------------------------
# 파일명: pyproject.toml
# 이 파일은 Poetry에서 사용하는 설정 파일이다.
# - 프로젝트 이름, 버전, 설명
# - 어떤 파이썬 폴더를 포함할지
# - 어떤 외부 패키지가 필요한지
# - 개발용 도구는 무엇인지
# - 프로젝트를 어떻게 빌드할지
# 등을 정의한다.
#----------------------------------------------------------------
[tool.poetry]

name = "todo"                              # 프로젝트 이름 (폴더명과는 무관함)
version = "0.1.0"                          # 프로젝트의 버전 (업데이트할 떄 변경)
description = ""                           # 프로젝트에 대한 간단한 설명
authors = ["서동건 <rlaalwjd5685@naver.com>"] # * 작성자의 이름과 이메일 (이름, 이메일)
readme = "README.md"                       # 이 프로젝트 소개 문서 파일 이름 (보통 깃허브 첫 화면에 보여질 내용)

# * 파이썬 코드가 들어 있는 폴더를 지정
# - 실제 FastAPI API 코드는 'api' 폴더에 작성되므로 그 폴더를 포함시킴
packages = [
    { include = "api" }, # * 'api' 폴더 안의 파일들을 패키지로 포함시킴
]

# ---------------------------------------------------------------
# 실제 프로젝트를 실행하기 위해 필요한 패키지들
# --------------------------------------------------------------
[tool.poetry.dependencies]

Python = "^3.12" # 이 프로젝트는 파이썬 3.12 이상에서 작동함


fastapi = "^0.115.12"
# * FastAPI: 웹 API 서버를 만들기 위한 핵심 프레임워크

uvicorn = { extras = ["standard"], version = "^0.34.0" }
# Uvicorn: FastAPI 서버를 실행할 떄 사용하는 웹서버
# - extras 옵션은 로그, 자동 재시작 같은 기능을 포함함

sqlalchemy = "^2.0.40"
# SQLAlchemy: 파이썬 코드로 데이터베이스를 다루는 도구 (ORM)

asyncpg = "^0.30.0"
# asyncpg: postgreSQL 데이터베이스에 비동기로 연결할 수 있게 해주는 드라이버

psycopg2-binary = "^2.9.10"
# psycopg2-binary: poetrySQL에 동기 방식으로 연결하는 드라이버
# - 비동기가 아닌 일반 DB 초기화 코드 등에서 사용됨

# ---------------------------------------------------------------
# 개발할 떄만 사용하는 도구들 (배포에는 포함되지 않음)
# ---------------------------------------------------------------
[tool.poetry.group.dev.dependencies]

pytest-asyncio = "^0.26.0"
# pytest-asyncio: async 함수 테스트에 필요한 도구
# 예: async def 로 만든 함수에서 await를 사용해 테스트 가능

aiosqlite = "^0.21.0"
# aiosqlite: SQLite를 비동기로 사용할 수 있게 해주는 드라이버
# 테스트용 DB 환경으로 자주 사용됨

httpx = "^0.28.1"
# httpx: HTTP 요청을 테스트할 수 있는 도구 (requests와 비슷함)
# 비동기 방식도 지워하며 FastAPI 테스트 코드에서 사용됨

# ---------------------------------------------------------------
# 프로젝트를 빌드(포장하거나 배포)할 때 사용하는 설정
# ---------------------------------------------------------------
[build-system]

requires = ["poetry-core"] # 빌드할 때 필요한 핵심 모듈

build-backend = "poetry.core.masonry.api" # 실제 빌드를 실행하는 백엔드 도구
